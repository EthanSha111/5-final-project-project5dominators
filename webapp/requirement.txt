Flask==2.1.2
pymongo==4.1.1
python-dotenv==0.20.0


@app.route('/convert_to_sketch', methods=['POST'])
def convert_to_sketch():
    try:
        username = session.get('username')
        message = request.form['message']
        timestamp = datetime.now()
        # Extract the image from the request
        image_data = request.form['image']
        # Decode the image from base64
        encoded_data = image_data.split(',')[1]
        nparr = np.fromstring(base64.b64decode(encoded_data), np.uint8)
        img = cv2.imdecode(nparr, cv2.IMREAD_COLOR)

        # Convert to grayscale
        gray_image = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        # Apply Gaussian blur
        blurred_image = cv2.GaussianBlur(gray_image, (5, 5), 0)
        # Apply Canny Edge Detector
        edges = cv2.Canny(blurred_image, 100, 200)

        # Encode the result
        _, buffer = cv2.imencode('.jpg', edges)
        sketch_base64 = base64.b64encode(buffer).decode('utf-8')
        new_message = {
            'username': username,
            'message': message,
            'photo': 'data:image/jpeg;base64,' + sketch_base64,
            'timestamp': timestamp
            }
        result = db.communication.insert_one(new_message)

        # Convert the ObjectId to a string
        new_message['_id'] = str(result.inserted_id)

        # Convert the timestamp to a string or a format that can be JSON serialized
        new_message['timestamp'] = str(timestamp)
        return jsonify(new_message)

    except Exception as e:
        return jsonify({'status': 'error', 'message': str(e)})


         //function for the sketchy ones
            function sketchAndSendMessage() {
                    var canvas = $('#canvas').get(0);
                    var context = canvas.getContext('2d');
                    var video = $('#video').get(0);
                    var message = $('#message-input').val().trim();

                    if (!video.srcObject || !video.srcObject.active) {
                        alert("Camera is not active. Please refresh and allow camera access to send messages.");
                        return;
                    }

                    if (message.length === 0) {
                        alert("Please enter a message.");
                        return;
                    }

                    context.drawImage(video, 0, 0, canvas.width, canvas.height);
                    var imageDataUrl = canvas.toDataURL('image/png');

                    // Send the image for sketch processing
                    $.ajax({
                        type: "POST",
                        url: "/convert_to_sketch",
                        data: { image: imageDataUrl },
                        success: function(sketchResponse) {
                            if (sketchResponse.status === 'success') {
                                // Send the sketched image and message
                                appendNewMessage(sketchResponse.photo,sketchResponse.message,sketchResponse.username,sketchResponse._id);
                            } else {
                                alert("Error processing sketch");
                            }
                        },
                        error: function(error) {
                            console.error("Error sending image for sketching", error);
                        }
                    });

                    $('#message-input').val('');
                }
